%!PS-Adobe-2.0
%%Title: test.ps
%%Creator: gnuplot 4.2 patchlevel 3 
%%CreationDate: Mon Jul  7 14:30:17 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 3 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (test.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 3 )
  /Author (Grace Li,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Jul  7 14:30:17 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
0 0 M
7199 0 L
0 5039 V
0 5039 L
0 0 L
stroke
LT0
420 4830 M
[ [(Helvetica) 140.0 0.0 true true 0 (Terminal Test)]
] -46.7 MLshow
LTb
LTa
3600 0 M
0 5039 V
0 2520 M
7199 0 V
stroke
LT3
2760 2590 M
1680 0 V
0 -140 V
-1680 0 V
0 140 V
stroke
2760 2520 M
[ [(Helvetica) 140.0 0.0 true true 0 (12345678901234567890)]
] -46.7 MLshow
2760 2715 M
[ [(Helvetica) 140.0 0.0 true true 0 (test of character width:)]
] -46.7 MLshow
LTb
3600 3360 M
[ [(Helvetica) 140.0 0.0 true true 0 (left justified)]
] -46.7 MLshow
3600 3220 M
[ [(Helvetica) 140.0 0.0 true true 0 (centre+d text)]
] -46.7 MCshow
3600 3080 M
[ [(Helvetica) 140.0 0.0 true true 0 (right justified)]
] -46.7 MRshow
LT1
140 2520 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (rotated ce+ntred text)]
] -46.7 MCshow
grestore
420 2520 M
currentpoint gsave translate 45 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 ( rotated by +45 deg)]
] -46.7 MLshow
grestore
280 2520 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 ( rotated by -45 deg)]
] -46.7 MLshow
grestore
LTb
LT4
3726 5039 M
0 -62 V
-126 -63 R
63 0 V
stroke
3516 4844 M
[ [(Helvetica) 140.0 0.0 true true 0 (show ticscale)]
] -46.7 MRshow
LTb
1.000 UP
6633 4900 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MRshow
6717 4900 M
252 0 V
stroke
LTa
6633 4760 M
[ [(Helvetica) 140.0 0.0 true true 0 (0)]
] -46.7 MRshow
6717 4760 M
252 0 V
7084 4760 Pnt
LT0
6633 4620 M
[ [(Helvetica) 140.0 0.0 true true 0 (1)]
] -46.7 MRshow
6717 4620 M
252 0 V
7084 4620 Pls
LT1
6633 4480 M
[ [(Helvetica) 140.0 0.0 true true 0 (2)]
] -46.7 MRshow
6717 4480 M
252 0 V
7084 4480 Crs
LT2
6633 4340 M
[ [(Helvetica) 140.0 0.0 true true 0 (3)]
] -46.7 MRshow
6717 4340 M
252 0 V
7084 4340 Star
LT3
6633 4200 M
[ [(Helvetica) 140.0 0.0 true true 0 (4)]
] -46.7 MRshow
6717 4200 M
252 0 V
7084 4200 Box
LT4
6633 4060 M
[ [(Helvetica) 140.0 0.0 true true 0 (5)]
] -46.7 MRshow
6717 4060 M
252 0 V
7084 4060 BoxF
LT5
6633 3920 M
[ [(Helvetica) 140.0 0.0 true true 0 (6)]
] -46.7 MRshow
6717 3920 M
252 0 V
7084 3920 Circle
LT6
6633 3780 M
[ [(Helvetica) 140.0 0.0 true true 0 (7)]
] -46.7 MRshow
6717 3780 M
252 0 V
7084 3780 CircleF
LT7
6633 3640 M
[ [(Helvetica) 140.0 0.0 true true 0 (8)]
] -46.7 MRshow
6717 3640 M
252 0 V
7084 3640 TriU
LT8
6633 3500 M
[ [(Helvetica) 140.0 0.0 true true 0 (9)]
] -46.7 MRshow
6717 3500 M
252 0 V
7084 3500 TriUF
LT0
6633 3360 M
[ [(Helvetica) 140.0 0.0 true true 0 (10)]
] -46.7 MRshow
6717 3360 M
252 0 V
7084 3360 TriD
LT1
6633 3220 M
[ [(Helvetica) 140.0 0.0 true true 0 (11)]
] -46.7 MRshow
6717 3220 M
252 0 V
7084 3220 TriDF
LT2
6633 3080 M
[ [(Helvetica) 140.0 0.0 true true 0 (12)]
] -46.7 MRshow
6717 3080 M
252 0 V
7084 3080 Dia
LT3
6633 2940 M
[ [(Helvetica) 140.0 0.0 true true 0 (13)]
] -46.7 MRshow
6717 2940 M
252 0 V
7084 2940 DiaF
LT4
6633 2800 M
[ [(Helvetica) 140.0 0.0 true true 0 (14)]
] -46.7 MRshow
6717 2800 M
252 0 V
7084 2800 Pent
LT5
6633 2660 M
[ [(Helvetica) 140.0 0.0 true true 0 (15)]
] -46.7 MRshow
6717 2660 M
252 0 V
7084 2660 PentF
LT6
6633 2520 M
[ [(Helvetica) 140.0 0.0 true true 0 (16)]
] -46.7 MRshow
6717 2520 M
252 0 V
7084 2520 C0
LT7
6633 2380 M
[ [(Helvetica) 140.0 0.0 true true 0 (17)]
] -46.7 MRshow
6717 2380 M
252 0 V
7084 2380 C1
LT8
6633 2240 M
[ [(Helvetica) 140.0 0.0 true true 0 (18)]
] -46.7 MRshow
6717 2240 M
252 0 V
7084 2240 C2
LT0
6633 2100 M
[ [(Helvetica) 140.0 0.0 true true 0 (19)]
] -46.7 MRshow
6717 2100 M
252 0 V
7084 2100 C3
LT1
6633 1960 M
[ [(Helvetica) 140.0 0.0 true true 0 (20)]
] -46.7 MRshow
6717 1960 M
252 0 V
7084 1960 C4
LT2
6633 1820 M
[ [(Helvetica) 140.0 0.0 true true 0 (21)]
] -46.7 MRshow
6717 1820 M
252 0 V
7084 1820 C5
LT3
6633 1680 M
[ [(Helvetica) 140.0 0.0 true true 0 (22)]
] -46.7 MRshow
6717 1680 M
252 0 V
7084 1680 C6
LT4
6633 1540 M
[ [(Helvetica) 140.0 0.0 true true 0 (23)]
] -46.7 MRshow
6717 1540 M
252 0 V
7084 1540 C7
LT5
6633 1400 M
[ [(Helvetica) 140.0 0.0 true true 0 (24)]
] -46.7 MRshow
6717 1400 M
252 0 V
7084 1400 C8
LT6
6633 1260 M
[ [(Helvetica) 140.0 0.0 true true 0 (25)]
] -46.7 MRshow
6717 1260 M
252 0 V
7084 1260 C9
LT7
6633 1120 M
[ [(Helvetica) 140.0 0.0 true true 0 (26)]
] -46.7 MRshow
6717 1120 M
252 0 V
7084 1120 C10
LT8
6633 980 M
[ [(Helvetica) 140.0 0.0 true true 0 (27)]
] -46.7 MRshow
6717 980 M
252 0 V
7084 980 C11
LT0
6633 840 M
[ [(Helvetica) 140.0 0.0 true true 0 (28)]
] -46.7 MRshow
6717 840 M
252 0 V
7084 840 C12
LT1
6633 700 M
[ [(Helvetica) 140.0 0.0 true true 0 (29)]
] -46.7 MRshow
6717 700 M
252 0 V
7084 700 C13
LT2
6633 560 M
[ [(Helvetica) 140.0 0.0 true true 0 (30)]
] -46.7 MRshow
6717 560 M
252 0 V
7084 560 C14
LT3
6633 420 M
[ [(Helvetica) 140.0 0.0 true true 0 (31)]
] -46.7 MRshow
6717 420 M
252 0 V
7084 420 C15
LT4
6633 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (32)]
] -46.7 MRshow
6717 280 M
252 0 V
7084 280 S0
1.000 UL
LT0
3020 1228 M
121 32 V
-121 32 V
-320 -32 R
441 0 V
stroke
gsave [] 0 setdash
3020 1228 M
121 32 V
-121 32 V
stroke
grestore
2380 1260 M
0 32 V
-121 -32 V
121 -32 V
0 32 V
320 0 R
-320 0 V
stroke
gsave [] 0 setdash
2380 1260 M
0 32 V
-121 -32 V
121 -32 V
0 32 V
stroke
grestore
gsave 2700 1580 N 32 0 V -32 121 V -32 -121 V 32 0 V 1 PolyFill
2700 1580 M
32 0 V
-32 121 V
-32 -121 V
32 0 V
0 -320 R
0 320 V
stroke
gsave [] 0 setdash
gsave 2700 1580 N 32 0 V -32 121 V -32 -121 V 32 0 V 1 PolyFill
2700 1580 M
32 0 V
-32 121 V
-32 -121 V
32 0 V
stroke
grestore
2700 940 M
-32 0 V
32 -121 V
32 121 V
-32 0 V
0 320 R
0 -320 V
stroke
gsave [] 0 setdash
2700 940 M
-32 0 V
32 -121 V
32 121 V
-32 0 V
stroke
grestore
2929 1489 M
23 -23 V
63 109 V
-109 -63 V
23 -23 V
2471 1031 M
23 -23 V
2385 945 L
63 109 V
23 -23 V
458 458 V
stroke
gsave [] 0 setdash
2929 1489 M
23 -23 V
63 109 V
-109 -63 V
23 -23 V
2471 1031 M
23 -23 V
2385 945 L
63 109 V
23 -23 V
stroke
grestore
2385 1575 M
315 -315 V
86 -86 R
-23 -23 V
-63 109 V
109 -63 V
-23 -23 V
3015 945 L
stroke
gsave [] 0 setdash
2786 1174 M
-23 -23 V
-63 109 V
109 -63 V
-23 -23 V
stroke
grestore
1.000 UL
LTb
539 201 M
720 0 V
stroke
1259 201 M
[ [(Helvetica) 140.0 0.0 true true 0 (  lw 1)]
] -46.7 MLshow
2.000 UL
LTb
539 402 M
720 0 V
stroke
1259 402 M
[ [(Helvetica) 140.0 0.0 true true 0 (  lw 2)]
] -46.7 MLshow
3.000 UL
LTb
539 603 M
720 0 V
stroke
1259 603 M
[ [(Helvetica) 140.0 0.0 true true 0 (  lw 3)]
] -46.7 MLshow
4.000 UL
LTb
539 804 M
720 0 V
stroke
1259 804 M
[ [(Helvetica) 140.0 0.0 true true 0 (  lw 4)]
] -46.7 MLshow
5.000 UL
LTb
539 1005 M
720 0 V
stroke
1259 1005 M
[ [(Helvetica) 140.0 0.0 true true 0 (  lw 5)]
] -46.7 MLshow
6.000 UL
LTb
539 1206 M
720 0 V
stroke
1259 1206 M
[ [(Helvetica) 140.0 0.0 true true 0 (  lw 6)]
] -46.7 MLshow
539 1407 M
[ [(Helvetica) 140.0 0.0 true true 0 (linewidth)]
] -46.7 MLshow
1.000 UL
LTb
4860 840 M
[ [(Helvetica) 140.0 0.0 true true 0 (pattern fill)]
] -46.7 MCshow
3600 0 180 630 BoxFill
3600 0 M
0 630 V
180 0 V
3780 0 L
3600 0 L
stroke
3690 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
3870 0 180 630 80 -45 1 PatternFill
3870 0 M
0 630 V
180 0 V
4050 0 L
3870 0 L
stroke
3960 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
4140 0 180 630 40 45 2 PatternFill
4140 0 M
0 630 V
180 0 V
4320 0 L
4140 0 L
stroke
4230 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MCshow
1 4410 0 180 630 BoxColFill
4410 0 M
0 630 V
180 0 V
4590 0 L
4410 0 L
stroke
4500 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MCshow
4680 0 180 630 80 45 0 PatternFill
4680 0 M
0 630 V
180 0 V
4860 0 L
4680 0 L
stroke
4770 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MCshow
4950 0 180 630 80 -45 0 PatternFill
4950 0 M
0 630 V
180 0 V
5130 0 L
4950 0 L
stroke
5040 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
5220 0 180 630 40 30 0 PatternFill
5220 0 M
0 630 V
180 0 V
5400 0 L
5220 0 L
stroke
5310 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MCshow
5490 0 180 630 40 -30 0 PatternFill
5490 0 M
0 630 V
180 0 V
5670 0 L
5490 0 L
stroke
5580 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 7)]
] -46.7 MCshow
5760 0 180 630 BoxFill
5760 0 M
0 630 V
180 0 V
5940 0 L
5760 0 L
stroke
5850 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MCshow
6030 0 180 630 80 -45 1 PatternFill
6030 0 M
0 630 V
180 0 V
6210 0 L
6030 0 L
stroke
6120 700 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 9)]
] -46.7 MCshow
LT2
gsave 5760 4183 N -180 311 V -360 0 V -180 -311 V 179 -312 V 361 0 V 180 312 V 1 PolyFill
LTb
5400 4613 M
[ [(Helvetica) 140.0 0.0 true true 0 (\(color\) filled polygon:)]
] -46.7 MCshow
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             %%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
