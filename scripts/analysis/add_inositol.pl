#!/usr/bin/perl
use strict;
#assumptions: flat sheet like system oriented so that the plane of the sheet is on XY plane at about 
#Z = 1/2*(box_z)
#adds inositols to the corners of a smaller box embedded within the bigger box
#adds 2 or 4 inositols
#works for 8 stranded stacked system
#assumes gro file input has box sizes; will use this box size to resize the inositol molecule box


if(@ARGV < 5){
	print "perl add_inositol.pl <isomer> <grofile> <num-inos> <box x y z> <topfile> \n";
	exit;
}

my $insdir = "/home/grace/"; #$ENV{'INS'};
my $temp="ADD_TEMP_";
my $isomer = $ARGV[0];
my $gro_file = $ARGV[1];   #gro file to add inositol to
my $nins = $ARGV[2];
my ($x,$y,$z) = ($ARGV[3],$ARGV[4],$ARGV[5]);
my $topfile = $ARGV[6];
my $NATOMS=24;
if($isomer eq "cer"){
	$NATOMS=22;
}
	
my $solute_box = `tail -1 $gro_file`;
$solute_box =~ s/^\s+//;
chomp($solute_box);
my @box = split(/\s+/,$solute_box);
print @box;

#give the isomer an inositol random rotation
my $rand0 = int(rand(180));
#resize boxsize of inositol to this size
my $inos_gro_file = "${temp}scyllo_em_$box[0]_$box[1]_$box[2].gro";
system("editconf -f $insdir/gro/${isomer}_em.gro -rotate 0 ${rand0} 0 -o $inos_gro_file -box $box[0] $box[1] $box[2]");


open(GRO, $gro_file);
my @sheet_lines=<GRO>;
close(GRO);

open(INOS, $inos_gro_file);
my @lines=<INOS>;
close(INOS);

open(NEW, ">${temp}new.gro");
chomp($sheet_lines[0]);
print NEW "$sheet_lines[0]", " generated by add_inositol.pl ${isomer}.gro $nins $x $y $z $topfile\n"; #put back in comments
my $new_num_atoms = $sheet_lines[1]+$nins*$NATOMS;
print NEW "$new_num_atoms\n";  # new total number of atoms
my @sbo = (0,0,0);   # small box origin
my @smallbox=($x,$y,$z); #small box dimensions

#print the coordinates of existing solute
for(my $j=2; $j<@sheet_lines-1; $j++) {
	print NEW $sheet_lines[$j];
}

if($nins) {
	if($nins == 4){
		#print the inositols
		for(my $i=2; $i<@lines-1;$i++) {
			my $x=substr($lines[$i],20,8)-$smallbox[0]/2+$sbo[0];
			my $y=substr($lines[$i],28,8)+$smallbox[1]/2+$sbo[1];
			my $z=substr($lines[$i],36,8)+$smallbox[2]/2+$sbo[2];
			my $subs=substr($lines[$i],0,20);
			printf NEW '%20s%8.3f%8.3f%8.3f',$subs,$x,$y,$z;
			print NEW "\n";
		}
	
	
		my $rand2 = int(rand(180));  
		system("editconf -f $insdir/gro/${isomer}_em.gro -rotate 0 ${rand2} 0 -o $inos_gro_file -box $box[0] $box[1] $box[2]");
		open(INOS, $inos_gro_file);
		@lines=<INOS>;
		close(INOS);
		for(my $i=2; $i<@lines-1;$i++) {
			my $x=substr($lines[$i],20,8)+$smallbox[0]/2-$sbo[0];
			my $y=substr($lines[$i],28,8)-$smallbox[1]/2-$sbo[1];
			my $z=substr($lines[$i],36,8)+$smallbox[2]/2+$sbo[2];
			substr($lines[$i],0,5)="    2";
			my $subs=substr($lines[$i],0,20);
			printf NEW '%20s%8.3f%8.3f%8.3f',$subs,$x,$y,$z;
			print NEW "\n";
		}
	
		my $rand3 = int(rand(180));  
		system("editconf -f $insdir/gro/${isomer}_em.gro -rotate 0 0 ${rand3} -o $inos_gro_file -box $box[0] $box[1] $box[2]");
		open(INOS, $inos_gro_file);
		@lines=<INOS>;
		close(INOS);
	
		for(my $i=2; $i<@lines-1;$i++) {
			my $x=substr($lines[$i],20,8)-$smallbox[0]/2-$sbo[0];
			my $y=substr($lines[$i],28,8)-$smallbox[1]/2+$sbo[1];
			my $z=substr($lines[$i],36,8)-$smallbox[2]/2-$sbo[2];
			substr($lines[$i],0,5)="    3";
			my $subs=substr($lines[$i],0,20);
			printf NEW '%20s%8.3f%8.3f%8.3f',$subs,$x,$y,$z;
			print NEW "\n";
		}

		my $rand4 = int(rand(180));  
		system("editconf -f $insdir/gro/${isomer}_em.gro -rotate ${rand4} 0 0 -o $inos_gro_file -box $box[0] $box[1] $box[2]");
		open(INOS, $inos_gro_file);
		@lines=<INOS>;
		close(INOS);

		for(my $i=2; $i<@lines-1;$i++) {
			my $x=substr($lines[$i],20,8)+$smallbox[0]/2+$sbo[0];
			my $y=substr($lines[$i],28,8)+$smallbox[1]/2-$sbo[1];
			my $z=substr($lines[$i],36,8)-$smallbox[2]/2-$sbo[2];
			substr($lines[$i],0,5)="    4";
			my $subs=substr($lines[$i],0,20);
			printf NEW '%20s%8.3f%8.3f%8.3f',$subs,$x,$y,$z;
			print NEW "\n";
		}
  	  #    system("echo 'INS       4' >> ${topfile}");
	}elsif($nins==2) {
		#print the inositols
		for(my $i=2; $i<@lines-1;$i++) {
			my $x=substr($lines[$i],20,8)+$smallbox[0]/2+$sbo[0];
			my $y=substr($lines[$i],28,8)+$smallbox[1]/2+$sbo[1];
			my $z=substr($lines[$i],36,8)-$smallbox[2]/2+$sbo[2];
			my $subs=substr($lines[$i],0,20);
			printf NEW '%20s%8.3f%8.3f%8.3f',$subs,$x,$y,$z;
			print NEW "\n";
		}
	
    
		my $rand1 = int(rand(180));
		system("editconf -f $insdir/gro/${isomer}_em.gro -rotate 0 ${rand1} 0 -o $inos_gro_file -box $box[0] $box[1] $box[2]");
		open(INOS, $inos_gro_file);
		my @lines=<INOS>;
		close(INOS);
	
		for(my $i=2; $i<@lines-1;$i++){
			my $x=substr($lines[$i],20,8)-$smallbox[0]/2-$sbo[0];
			my $y=substr($lines[$i],28,8)-$smallbox[1]/2-$sbo[1];
			my $z=substr($lines[$i],36,8)-$smallbox[2]/2-$sbo[2];
			substr($lines[$i],0,5)="    2";
			my $subs=substr($lines[$i],0,20);
			printf NEW '%20s%8.3f%8.3f%8.3f',$subs,$x,$y,$z;
			print NEW "\n";
		}
	}
}

print NEW $sheet_lines[@sheet_lines-1];
chomp(my $base = `basename $gro_file .gro`);
print "$base\n";
system("editconf -f ${temp}new.gro -o ${base}_${nins}${isomer}.gro");
system("genbox -cp ${base}_${nins}${isomer}.gro -cs $insdir/gro/tip3.gro -p ${topfile} -o ${base}_${nins}${isomer}_tip3p.gro");
system("rm ADD_TEMP*");
